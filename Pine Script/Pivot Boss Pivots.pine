//@version=4
// This source code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/
// Â© pranjalchaubey

// Credits 
//==============================================================================
// A large amount of code in this indicator was taken from Legendary Chris Moody's
// "CM_Pivot Points_M-W-D_4H_1H_Filtered" Indicator
//==============================================================================


//Structural Pivots
study(title="[CP]Pivot Boss Floor Pivots & Camarilla - Smart Assist and DPZ Detection", shorttitle="[CP]Pivot Boss Pivots", overlay=true, max_labels_count=500)


// User Inputs 
//==============================================================================
show_floor_pivots           = input(true,   type=input.bool,                            title="Show Floor Pivots",                          group="Floor Pivots")
show_cpr                    = input(true,   type=input.bool,                            title="Show Central Pivot Range",                   group="Floor Pivots")
dynamic_pivot_levels        = input(true,   type=input.bool,                            title="Show Floor Pivot Levels Dynamically",        group="Floor Pivots")
dynamic_pivot_atr_period    = input(14,     type=input.integer,   minval=1, maxval=356, title="Dynamic Pivot ATR Period",                   group="Floor Pivots")
dynamic_pivot_atr_threshold = input(2.0,    type=input.float,   minval=0.1, maxval=10,  title="ATR Threshold for Dynamic Floor Pivots",     group="Floor Pivots")
floor_pivots_p_color        = input(color.new(color.blue, 0),   type = input.color,     title="Central Floor Pivot Color",                  group="Floor Pivots")
floor_pivots_r_color        = input(color.new(color.red, 0),    type = input.color,     title="Floor Pivots Resistance Levels' Color",      group="Floor Pivots")
floor_pivots_s_color        = input(color.new(color.lime, 0),   type = input.color,     title="Floor Pivots Support Levels' Color",         group="Floor Pivots")
floor_pivots_cpr_color      = input(color.new(color.blue, 50),  type = input.color,     title="Floor Pivots CPR Band Color",                group="Floor Pivots")

show_cams                   = input(true,   type=input.bool,                            title="Show Camarilla Pivots",                      group="The Camarilla Equation")
show_hidden_cams            = input(false,  type=input.bool,                            title="Show Hidden Camarilla Layers H1 H2 L1 L2",   group="The Camarilla Equation")
dynamic_cams_levels         = input(true,   type=input.bool,                            title="Show Camarilla Levels Dynamically",          group="The Camarilla Equation")
cams_h_color                = input(color.new(color.olive, 0),  type = input.color,     title="Camarilla H Layers' Color",                  group="The Camarilla Equation")
cams_l_color                = input(color.new(color.yellow, 0), type = input.color,     title="Camarilla L Layers' Color",                  group="The Camarilla Equation")

show_dpz                    = input(true,   type=input.bool,                            title="Mark Double Hot Pivot Zones (DPZ)",          group="Double Hot Pivot Zone Detection")
atr_threshold               = input(1.0,    type=input.float,   minval=0.1, maxval=10,  title="ATR Threshold for DPZ Detection",            group="Double Hot Pivot Zone Detection")
atr_period                  = input(14,     type=input.integer,   minval=1, maxval=356, title="ATR Period",                                 group="Double Hot Pivot Zone Detection")

show_daily_pivots           = input(true,   type=input.bool,                            title="Show Daily Pivots",                          group="TimeFrames")
show_weekly_pivots          = input(false,  type=input.bool,                            title="Show Weekly Pivots",                         group="TimeFrames")
show_monthly_pivots         = input(false,  type=input.bool,                            title="Show Monthly Pivots",                        group="TimeFrames")
show_yearly_pivots          = input(false,  type=input.bool,                            title="Show Yearly Pivots",                         group="TimeFrames")


// Calculations  
//==============================================================================
// Floor Pivots 
// Central Pivot 
pivot = (high + low + close) / 3.0
// Resistance Levels 
r1 = (2 * pivot) - low
r2 = pivot + (high - low)
r3 = r1 + (high - low)
r4 = r3 + (r2 - r1) 
// Support Levels 
s1 = (2 * pivot) - high  
s2 = pivot - (high - low) 
s3 = s1 - (high - low) 
s4 = s3 - (s1 - s2)
// Central Pivot Range 
temp_bc = (high + low) / 2 
temp_tc = (pivot - temp_bc) + pivot 
tc = temp_tc > temp_bc ? temp_tc : temp_bc
bc = temp_bc < temp_tc ? temp_bc : temp_tc
// Dynamic Floor Pivots 
dynamic_pivot_atr = atr(dynamic_pivot_atr_period) * dynamic_pivot_atr_threshold
dynamic_high = high + dynamic_pivot_atr
dynamic_low = low - dynamic_pivot_atr
// The Camarilla Equation 
cam_range = high - low 
// Resistance Levels 
h1 = close + (cam_range * 1.1/12) 
h2 = close + (cam_range * 1.1/6) 
h3 = close + (cam_range * 1.1/4) 
h4 = close + (cam_range * 1.1/2)
h5 = (high / low) * close 
// Support Levels 
l1 = close - (cam_range * 1.1/12)
l2 = close - (cam_range * 1.1/6)
l3 = close - (cam_range * 1.1/4)
l4 = close - (cam_range * 1.1/2)
l5 = close - (h5 - close)
// Average True Range 
dpz_atr = atr(atr_period) * atr_threshold


// Dynamic Floor Pivot Variables 
var bool show_daily_pivot   = na
var bool show_daily_r1      = na
var bool show_daily_r2      = na
var bool show_daily_r3      = na
var bool show_daily_r4      = na
var bool show_daily_s1      = na
var bool show_daily_s2      = na
var bool show_daily_s3      = na
var bool show_daily_s4      = na


// Daily Floor Pivots 
daily_pivot = security(syminfo.tickerid, 'D', pivot[1],     barmerge.gaps_off, barmerge.lookahead_on)
daily_r1    = security(syminfo.tickerid, 'D', r1[1],        barmerge.gaps_off, barmerge.lookahead_on) 
daily_r2    = security(syminfo.tickerid, 'D', r2[1],        barmerge.gaps_off, barmerge.lookahead_on) 
daily_r3    = security(syminfo.tickerid, 'D', r3[1],        barmerge.gaps_off, barmerge.lookahead_on) 
daily_r4    = security(syminfo.tickerid, 'D', r4[1],        barmerge.gaps_off, barmerge.lookahead_on) 
daily_s1    = security(syminfo.tickerid, 'D', s1[1],        barmerge.gaps_off, barmerge.lookahead_on) 
daily_s2    = security(syminfo.tickerid, 'D', s2[1],        barmerge.gaps_off, barmerge.lookahead_on)
daily_s3    = security(syminfo.tickerid, 'D', s3[1],        barmerge.gaps_off, barmerge.lookahead_on)
daily_s4    = security(syminfo.tickerid, 'D', s4[1],        barmerge.gaps_off, barmerge.lookahead_on)
daily_tbc   = security(syminfo.tickerid, 'D', temp_bc[1],   barmerge.gaps_off, barmerge.lookahead_on)
daily_ttc   = security(syminfo.tickerid, 'D', temp_tc[1],   barmerge.gaps_off, barmerge.lookahead_on)
daily_tc    = daily_ttc > daily_tbc ? daily_ttc : daily_tbc
daily_bc    = daily_tbc < daily_ttc ? daily_tbc : daily_ttc

// Dynamic Daily Floor Pivot Logic
show_daily_pivot    := show_daily_pivot[1]  == false and dynamic_pivot_levels and ((daily_pivot  >= dynamic_low and daily_pivot  <= dynamic_high) or (daily_tc >= dynamic_low and daily_tc <= dynamic_high) or (daily_bc >= dynamic_low and daily_bc <= dynamic_high)) ? 1 : dynamic_pivot_levels == false ? 1 : show_daily_pivot[1]  == true and dayofmonth == dayofmonth[1] ? 1 : 0
show_daily_r1       := show_daily_r1[1]     == false and dynamic_pivot_levels and daily_r1       >= dynamic_low and daily_r1     <= dynamic_high ? 1 : dynamic_pivot_levels == false ? 1 : show_daily_r1[1]     == true and dayofmonth == dayofmonth[1] ? 1 : 0
show_daily_r2       := show_daily_r2[1]     == false and dynamic_pivot_levels and daily_r2       >= dynamic_low and daily_r2     <= dynamic_high ? 1 : dynamic_pivot_levels == false ? 1 : show_daily_r2[1]     == true and dayofmonth == dayofmonth[1] ? 1 : 0
show_daily_r3       := show_daily_r3[1]     == false and dynamic_pivot_levels and daily_r3       >= dynamic_low and daily_r3     <= dynamic_high ? 1 : dynamic_pivot_levels == false ? 1 : show_daily_r3[1]     == true and dayofmonth == dayofmonth[1] ? 1 : 0
show_daily_r4       := show_daily_r4[1]     == false and dynamic_pivot_levels and daily_r4       >= dynamic_low and daily_r4     <= dynamic_high ? 1 : dynamic_pivot_levels == false ? 1 : show_daily_r4[1]     == true and dayofmonth == dayofmonth[1] ? 1 : 0
show_daily_s1       := show_daily_s1[1]     == false and dynamic_pivot_levels and daily_s1       >= dynamic_low and daily_s1     <= dynamic_high ? 1 : dynamic_pivot_levels == false ? 1 : show_daily_s1[1]     == true and dayofmonth == dayofmonth[1] ? 1 : 0
show_daily_s2       := show_daily_s2[1]     == false and dynamic_pivot_levels and daily_s2       >= dynamic_low and daily_s2     <= dynamic_high ? 1 : dynamic_pivot_levels == false ? 1 : show_daily_s2[1]     == true and dayofmonth == dayofmonth[1] ? 1 : 0
show_daily_s3       := show_daily_s3[1]     == false and dynamic_pivot_levels and daily_s3       >= dynamic_low and daily_s3     <= dynamic_high ? 1 : dynamic_pivot_levels == false ? 1 : show_daily_s3[1]     == true and dayofmonth == dayofmonth[1] ? 1 : 0
show_daily_s4       := show_daily_s4[1]     == false and dynamic_pivot_levels and daily_s4       >= dynamic_low and daily_s4     <= dynamic_high ? 1 : dynamic_pivot_levels == false ? 1 : show_daily_s4[1]     == true and dayofmonth == dayofmonth[1] ? 1 : 0


// Daily Camarilla Pivots 
daily_h1    = security(syminfo.tickerid, 'D', h1[1], barmerge.gaps_off, barmerge.lookahead_on)
daily_h2    = security(syminfo.tickerid, 'D', h2[1], barmerge.gaps_off, barmerge.lookahead_on)
daily_h3    = security(syminfo.tickerid, 'D', h3[1], barmerge.gaps_off, barmerge.lookahead_on)
daily_h4    = security(syminfo.tickerid, 'D', h4[1], barmerge.gaps_off, barmerge.lookahead_on)
daily_h5    = security(syminfo.tickerid, 'D', h5[1], barmerge.gaps_off, barmerge.lookahead_on)
daily_l1    = security(syminfo.tickerid, 'D', l1[1], barmerge.gaps_off, barmerge.lookahead_on)
daily_l2    = security(syminfo.tickerid, 'D', l2[1], barmerge.gaps_off, barmerge.lookahead_on)
daily_l3    = security(syminfo.tickerid, 'D', l3[1], barmerge.gaps_off, barmerge.lookahead_on)
daily_l4    = security(syminfo.tickerid, 'D', l4[1], barmerge.gaps_off, barmerge.lookahead_on)
daily_l5    = security(syminfo.tickerid, 'D', l5[1], barmerge.gaps_off, barmerge.lookahead_on)

// Daily Average True Range 
daily_dpz_atr = security(syminfo.tickerid, 'D', dpz_atr[1], barmerge.gaps_off, barmerge.lookahead_on)


// Plots   
//==============================================================================
// Floor Pivots
plot(show_floor_pivots and show_daily_pivots and show_daily_pivot ? daily_pivot : na,            title = "Daily Pivot",  color = floor_pivots_p_color,   linewidth = 2, style = plot.style_circles)
plot(show_floor_pivots and show_daily_pivots and show_daily_r1 ? daily_r1 : na,               title = "R1",           color = floor_pivots_r_color,   linewidth = 2, style = plot.style_circles)
plot(show_floor_pivots and show_daily_pivots and show_daily_r2 ? daily_r2 : na,               title = "R2",           color = floor_pivots_r_color,   linewidth = 2, style = plot.style_circles)
plot(show_floor_pivots and show_daily_pivots and show_daily_r3 ? daily_r3 : na,               title = "R3",           color = floor_pivots_r_color,   linewidth = 2, style = plot.style_circles)
plot(show_floor_pivots and show_daily_pivots and show_daily_r4 ? daily_r4 : na,               title = "R4",           color = floor_pivots_r_color,   linewidth = 2, style = plot.style_circles)
plot(show_floor_pivots and show_daily_pivots and show_daily_s1 ? daily_s1 : na,               title = "S1",           color = floor_pivots_s_color,   linewidth = 2, style = plot.style_circles)
plot(show_floor_pivots and show_daily_pivots and show_daily_s2 ? daily_s2 : na,               title = "S2",           color = floor_pivots_s_color,   linewidth = 2, style = plot.style_circles)
plot(show_floor_pivots and show_daily_pivots and show_daily_s3 ? daily_s3 : na,               title = "S3",           color = floor_pivots_s_color,   linewidth = 2, style = plot.style_circles)
plot(show_floor_pivots and show_daily_pivots and show_daily_s4 ? daily_s4 : na,               title = "S4",           color = floor_pivots_s_color,   linewidth = 2, style = plot.style_circles)
tcline = plot(show_cpr and show_daily_pivot ? daily_tc : na,                                     title = "TC",           color = floor_pivots_cpr_color, linewidth = 1, style = plot.style_line)
bcline = plot(show_cpr and show_daily_pivot ? daily_bc : na,                                     title = "BC",           color = floor_pivots_cpr_color, linewidth = 1, style = plot.style_line)
fill(tcline, bcline, color = color.new(floor_pivots_cpr_color, show_cpr and show_daily_pivot ? 75 : 100))

// The Camarilla Equation 
plot(show_cams and show_daily_pivots and show_hidden_cams ? daily_h1 : na,  title = "H1",           color = cams_h_color,           linewidth = 1, style = plot.style_circles)
plot(show_cams and show_daily_pivots and show_hidden_cams ? daily_h2 : na,  title = "H2",           color = cams_h_color,           linewidth = 1, style = plot.style_circles)
plot(show_cams and show_daily_pivots ? daily_h3 : na,                       title = "H3",           color = cams_h_color,           linewidth = 1, style = plot.style_circles)
plot(show_cams and show_daily_pivots ? daily_h4 : na,                       title = "H4",           color = cams_h_color,           linewidth = 1, style = plot.style_circles)
plot(show_cams and show_daily_pivots ? daily_h5 : na,                       title = "H5",           color = cams_h_color,           linewidth = 1, style = plot.style_circles)
plot(show_cams and show_daily_pivots and show_hidden_cams ? daily_l1 : na,  title = "L1",           color = cams_l_color,           linewidth = 1, style = plot.style_circles)
plot(show_cams and show_daily_pivots and show_hidden_cams ? daily_l2 : na,  title = "L2",           color = cams_l_color,           linewidth = 1, style = plot.style_circles)
plot(show_cams and show_daily_pivots ? daily_l3 : na,                       title = "L3",           color = cams_l_color,           linewidth = 1, style = plot.style_circles)
plot(show_cams and show_daily_pivots ? daily_l4 : na,                       title = "L4",           color = cams_l_color,           linewidth = 1, style = plot.style_circles)
plot(show_cams and show_daily_pivots ? daily_l5 : na,                       title = "L5",           color = cams_l_color,           linewidth = 1, style = plot.style_circles)

// Debugging
//==============================================================================
plotchar(show_daily_pivot, "Show Daily Pivot", "", location = location.top, size=size.tiny, color=color.lime)
plotchar(dayofmonth != dayofmonth[1], "Day of Month", "", location = location.top, size=size.tiny, color=color.lime)
// var label lbl_a = na, label.delete(lbl_a)
// lbl_a := label.new(bar_index - 2, high + high*0.005, text = "TimeFrame = " + timeframe.period, textalign = text.align_left)
